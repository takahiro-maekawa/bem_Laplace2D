#include <vector>
#include "integralGL.h"
#include <iostream>

//ガウス・ルジャンドル積分に用いる分点[-1,1]及び重みを用意
void return_eta_weights(vector<double>& etas, vector<double>& weights, int n_pt){
  switch (n_pt) {
		case 3:
      etas = {-0.7745966692414834, 0.0, 0.7745966692414834};
      weights = {0.5555555555555556, 0.8888888888888888, 0.5555555555555556};

      break;

    case 4:
      etas = {-0.8611363115940526, -0.33998104358485626, 0.33998104358485626, 0.8611363115940526};
      weights = {0.34785484513745385, 0.6521451548625461, 0.6521451548625461, 0.34785484513745385};

      break;

    case 5:
      etas = {-0.906179845938664, -0.5384693101056831, 0, 0.5384693101056831, 0.906179845938664};
      weights = {0.23692688505618908, 0.47862867049936647, 0.5688888888888889,
                  0.47862867049936647, 0.23692688505618908};
    	break;

    case 6:
      etas = {-0.932469514203152, -0.6612093864662645, -0.2386191860831969,
                0.2386191860831969, 0.6612093864662645, 0.932469514203152};

      weights = {0.17132449237917036, 0.3607615730481386, 0.46791393457269104,
                0.46791393457269104, 0.3607615730481386, 0.17132449237917036};
      break;

    case 7:
      etas = {-0.9491079123427585, -0.7415311855993945, -0.4058451513773972, 0,
                0.4058451513773972, 0.7415311855993945, 0.9491079123427585};

      weights = {0.1294849661688697, 0.27970539148927664, 0.3818300505051189, 0.4179591836734694,
                0.3818300505051189, 0.27970539148927664, 0.1294849661688697};
      break;

    default:
      etas = {-0.5773502691896257, 0.5773502691896257};
      weights = {1.0, 1.0};
    break;
	}

}

//[-1, 1]に存在する座標を[r1, r2]区間に変換
void insert_1d_position(vector<double> &rs_elem_node, double r1, double r2, vector<double> etas){
  int n_pt = etas.size();
  for(int i=0; i<n_pt; ++i){
    rs_elem_node[i] = (r1+r2)/2. + etas[i] * (r2-r1) / 2.0;
  }
}
